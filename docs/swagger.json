{
    "swagger": "2.0",
    "info": {
        "description": "O Bridge é um padrão de design estrutural que ajuda a dividir uma classe grande ou um conjunto de classes intimamente relacionadas em duas hierarquias distintas, para saber mais [**clique aqui**](https://refactoring.guru/pt-br/design-patterns/bridge). Essas duas hierarquias podem ser desenvolvidas independentemente uma da outra, permitindo maior flexibilidade e escalabilidade no desenvolvimento de software. Basicamente, o padrão Bridge é uma solução para o problema de como separar a interface de uma classe de sua implementação, permitindo que ambas evoluam independentemente.\n\nO projeto FeatWS Resolver Bridge tem como objetivo estabelecer a ligação entre o [**motor de regras**](https://github.com/bancodobrasil/featws-ruller) do projeto e os demais resolvers, ou possíveis resolvers, de forma a permitir uma maior flexibilidade na estruturação e desenvolvimento de software. De modo mais detalhado, essa abordagem de design estrutural proporciona a separação da lógica de implementação da abstração do código, permitindo que ambas evoluam independentemente uma da outra. Isso possibilita a utilização de diferentes tipos de resolvers no projeto, de forma a atender às necessidades específicas do negócio.\n\nAntes de realizar as requisições no Swagger, é necessário autorizar o acesso clicando no botão **Authorize**, ao lado, e inserindo a senha correspondente. Após inserir o campo **value** e clicar no botão **Authorize**, o Swagger estará disponível para ser utilizado.\n",
        "title": "FeatWS Resolver Bridge",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:9000",
    "basePath": "/api/v1",
    "paths": {
        "/load": {
            "get": {
                "security": [
                    {
                        "Authentication Api Key": []
                    }
                ],
                "description": "Carrega as descrições dos Resolvers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "load"
                ],
                "summary": "Carrega os Resolvers",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/resolve/{resolver}": {
            "post": {
                "security": [
                    {
                        "Authentication Api Key": []
                    }
                ],
                "description": "O Resolver Bridge pode ser usado para buscar dados em outros resolvers que fazem parte do FeatWS, podendo retornar diversos parâmetros, como os seguintes:\n\n- account (conta)\n- accountType (tipo de conta)\n- age (idade)\n- agenciaDet (tipo de conta)\n- branch (agencia)\n- branchState (Estado da agencia)\n- customerBase (agencia)\n- dataNascimento (data de nascimento)\n- employeeDependency (Dependecia do empregado do banco - só trará um retorno se a pessoa for funci do banco)\n- employeeKey (se é empregado do banco)\n- enterpriseKey (chave empresarial)\n- gender (sexo)\n- holder (titularidade da conta)\n- holderState (estado do titularidade da conta)\n- mci\n- mcipj\n- wallet (carteira)\n\nNo geral, o Resolver Adapter Project é uma biblioteca útil que pode simplificar o desenvolvimento de APIs GraphQL fornecendo resolvers pré-construídos que podem ser facilmente integrados em outros projetos.\n\nPara conseguir utilizar o endpoint é necessário colocar no body, dentro do *context*, contexto, da requisição a agencia do cliente, *branch*, como também, a conta do mesmo, *account*, como o exemplo a seguir:\n\n```\n{\n\"context\": {\n\"account\": “7894”,\n\"branch\": “4024”,\n},\n\"load\":[]\n}\n```\n\nCom esse input o body de resposta trará todos os parâmetros da conta. O *load* é opcional na requisição. Nele é possível passar parâmetros que você deseja buscar no banco de dados ao invés de buscar todos os parâmetros, podendo buscar quantos sejam necessários, como o exemplo a seguir:\n\n```\n{\n\"context\": {\n\"account\": \"7894\",\n\"branch\": \"4024\",\n},\n\"load\":[\"age\",\"gender\",\"holder\"]\n}\n```\nCom esse input o body de resposta será trago dentro do parâmetro *context*, contexto.\n\n```\n{\n\"context\": {\n\"age\": \"36\",\n\"gender\": \"M\",\n\"holder\": \"1\"\n},\n\"errors\": {}\n}\n```",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resolve"
                ],
                "summary": "Executa as resoluções do Resolve",
                "parameters": [
                    {
                        "type": "string",
                        "description": "resolver",
                        "name": "resolver",
                        "in": "path"
                    },
                    {
                        "description": "Parameters",
                        "name": "parameters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_bancodobrasil_featws-resolver-bridge_payloads_v1.Resolve"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/resolvers/": {
            "get": {
                "security": [
                    {
                        "Authentication Api Key": []
                    }
                ],
                "description": "Lista a descrição dos Resolvers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resolvers"
                ],
                "summary": "Lista os Resolvers",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_bancodobrasil_featws-resolver-bridge_payloads_v1.Resolve": {
            "type": "object",
            "properties": {
                "context": {
                    "type": "object",
                    "additionalProperties": true
                },
                "load": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "options": {
                    "type": "object",
                    "additionalProperties": true
                },
                "resolver": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Authentication Api Key": {
            "type": "apiKey",
            "name": "X-API-Key",
            "in": "header"
        }
    },
    "x-extension-openapi": {
        "example": "value on a json format"
    }
}